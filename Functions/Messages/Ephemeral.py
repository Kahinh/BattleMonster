import lib

def get_ephemeralAttack(self, Damage, Hit, Stacks_Earned, slayer_class, battle_class, user_id, canAttack):

    Bases_Bonuses_Slayers = self.BDD["Bases_Bonuses_Slayers"]
    Items_list = self.BDD["Items_list"]

    ephemeral_message = ""
    if Hit == "L":
        Hit = "Attaque L√©g√®re"
    elif Hit == "H":
        Hit = "Attaque Lourde"
    else: 
        Hit = "Sp√©cial"
    
    if canAttack == False:
        ephemeral_message += f"> Pas si vite ! Prends ton temps ! Prochaine attaque disponible dans **{int(battle_class.slayers_data[user_id].timestamp_next_hit - lib.datetime.datetime.timestamp(lib.datetime.datetime.now()))}s**"
    else:
        if Damage == 0:
            #Esquive
            ephemeral_message += f"**> Le monstre a √©vit√© ton attaque !**"
        elif Damage < 0:
            #Les d√©g√¢ts qu'on a subi
            ephemeral_message += f"**> Le monstre a bloqu√© ton attaque, et tu t'es fait attaquer en retour !**\n> ‚öîÔ∏è D√©g√¢ts subis : {abs(Damage)} - Vie restante : {slayer_class.calculateStats()['total_current_health']}/{slayer_class.calculateStats()['total_max_health']} ‚ù§Ô∏è"
        else:
            #D√©g√¢ts inflig√©s !
            ephemeral_message += f"**> Ton {Hit} a touch√© le monstre avec succ√®s !**\n> ‚öîÔ∏è D√©g√¢ts inflig√©s : {Damage}"
            #Le monstre est il mort ?
            if battle_class.monster_class.base_hp == 0:
                ephemeral_message += f"\n> Le monstre est mort ! üíÄ"
            else:     
                ephemeral_message += f"\n> Le monstre poss√®de d√©sormais {battle_class.monster_class.base_hp}/{battle_class.monster_class.total_hp} ‚ù§Ô∏è"
            #Si on a gagn√© des stacks
            if Stacks_Earned > 0:
                ephemeral_message += f"\n\n> ‚òÑÔ∏è Charge obtenue : {Stacks_Earned} - Charge total : **{slayer_class.special_stacks}/{slayer_class.calculateStats()['total_stacks']}**"
        
        #If Battle = already dealed damage, on affiche le total !
        if battle_class.slayers_data[user_id].total_damage > Damage and battle_class.slayers_data[user_id].total_damage > 0:
            ephemeral_message += f"\n\n> üî± D√©g√¢ts inflig√©s totaux : {battle_class.slayers_data[user_id].total_damage}"

        #If Battle.eligible == False, on rajoute que le mec est pas √©ligible ! Sinon on affiche qu'il est √©ligible !
        if battle_class.slayers_data[user_id].eligible:
            #En ayant inflig√© des d√©g√¢ts au Monstre, tu es √©ligible !
            ephemeral_message += f"\n\n> ‚ú® **En ayant inflig√© des d√©g√¢ts au Monstre, tu es √©ligible √† l'obtention de butin !**"
        else:
            ephemeral_message += f"\n\n> üõë **Tu n'es, pour l'instant, pas √©ligible √† l'obtention de butin !**"

        #Puis, on rajoute la vivacit√© !
        ephemeral_message += f"\n\n> Gr√¢ce √† ta vivacit√© de {slayer_class.calculateStats()['total_vivacity']}, tu pourras attaquer de nouveau dans **{slayer_class.calculateStats()['total_cooldown']}s**."

    return ephemeral_message

def get_ephemeralLootReaction(self, interaction, isGoodSlayer, reaction, loot):
    ephemeral_message = ""
    ephemeral_message += "Tu as cliqu√© !"
    return ephemeral_message